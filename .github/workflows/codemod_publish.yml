# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

# For more information see: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/running-variations-of-jobs-in-a-workflow

name: Publish Codemod

on:
  push:
    tags:
      - 'v*@*'  # Match tags like v1.0.0@my-codemod
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to publish (e.g., v1.0.0@my-codemod)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version and codemod name
        id: extract
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${GITHUB_REF#refs/tags/}"
          fi

          # Extract version (everything before @)
          VERSION="${TAG%@*}"
          VERSION="${VERSION#v}"  # Remove 'v' prefix

          # Extract codemod name (everything after @)
          CODEMOD_NAME="${TAG#*@}"

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "CODEMOD_NAME=$CODEMOD_NAME" >> $GITHUB_OUTPUT
          echo "CODEMOD_PATH=recipes/$CODEMOD_NAME" >> $GITHUB_OUTPUT

          echo "Publishing: $CODEMOD_NAME (version: $VERSION) from recipes/$CODEMOD_NAME"

      - name: Validate codemod directory exists
        run: |
          if [ ! -d "${{ steps.extract.outputs.CODEMOD_PATH }}" ]; then
            echo "Error: Directory ${{ steps.extract.outputs.CODEMOD_PATH }} does not exist"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Codemod CLI
        run: npm install -g codemod@next

      - name: Login to Codemod registry
        env:
          CODEMOD_TOKEN: ${{ secrets.CODEMOD_TOKEN }}
        run: codemod login --token "$CODEMOD_TOKEN"

      - name: Run test
        working-directory: ${{ steps.extract.outputs.CODEMOD_PATH }}
        run: node --run test

      - name: Publish codemod (dry run)
        working-directory: ${{ steps.extract.outputs.CODEMOD_PATH }}
        run: codemod publish --dry-run

      - name: Publish codemod
        working-directory: ${{ steps.extract.outputs.CODEMOD_PATH }}
        run: codemod publish
